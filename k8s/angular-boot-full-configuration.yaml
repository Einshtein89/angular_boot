apiVersion: v1
kind: Secret
metadata:
  namespace: books-store
  name: mongodb-secret
# Opaque - default type for key-value pairs
type: Opaque
data:
  mongo-root-username: dXNlcm5hbWU=
  mongo-root-password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: books-store
  name: configmap
data:
  #name of the service of the deployment we need serves as a url.
  database_url: mongodb-service
---
apiVersion: v1
kind: Service
metadata:
  namespace: books-store
  name: mongodb-service
spec:
  type: NodePort
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: angular-service
  namespace: books-store
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: angular-deployment
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-service
  namespace: books-store
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: spring-boot-deployment
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dashboard-ingress
  namespace: books-store
spec:
  tls:
    - hosts:
        - books.com
      secretName: tls-secret
  rules:
    - host: books.com
      http:
        paths:
          - path: /
            backend:
              serviceName: angular-service
              servicePort: 80
          - path: /api
            backend:
              serviceName: spring-boot-service
              servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: books-store
  name: mongodb-deployment
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password
---
apiVersion: apps/v1
kind: Deployment                                          # 1
metadata:
  name: angular-deployment
  namespace: books-store
  labels:
    app: angular-deployment
spec:
  selector:
    matchLabels:
      app: angular-deployment
  replicas: 2                                             # 2
  minReadySeconds: 15
  strategy:
    type: RollingUpdate                                   # 3
    rollingUpdate:
      maxUnavailable: 1                                   # 4
      maxSurge: 1                                         # 5
  template:
    metadata:
      labels:
        app: angular-deployment                                 # 6
    spec:
      containers:
        - image: einshtein89/books_frontend_mongo:1
          imagePullPolicy: Always                         # 7
          name: angular-deployment
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-deployment
  namespace: books-store
  labels:
    app: spring-boot-deployment
spec:
  selector:
    matchLabels:
      app: spring-boot-deployment
  replicas: 1
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: spring-boot-deployment
    spec:
      containers:
        - image: einshtein89/books_backend_mongo:1
          imagePullPolicy: Always
          name: spring-boot-deployment
          ports:
            - containerPort: 3000
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: database_url